{% extends 'base.html.twig' %}

{% block title %}Hello MainController!{% endblock %}

{% block body %}
    <h2>Input component example</h2>
    {{ component('input', { label: 'Input 1' }) }}
    {{ component('input', { label: 'Input 2', type: 'email' }) }}
    {{ component('input', { label: 'Input 3', value: 'default' }) }}
    {{ component('input', { label: 'Input 4', errors: ['some error', 'another error'] }) }}
    {{ component('input', { label: 'Input 5', errors: 'error' }) }}

    <h2>Component with service example</h2>
    <p>Components are services but cloned before injecting <em>state</em>. Below, the state variables
    should be different but the injected service id should be the same (not cloned).</p>
    {{ component('with_service', { state: 'foo' }) }}
    {{ component('with_service') }}
    {{ component('with_service', { state: 'bar' }) }}

    <h2>Complex input</h2>
    {{ component('complex_input', { prefix: 'my-prefix: ', date: date() }) }}

    {% if post %}
        <h2>PostEdit component</h2>
        {{ component('edit_post', { post: post }) }}

        <h2>ChangeablePostEdit component</h2>
        <small>
            Try changing the <code>select</code> to a different post.
            The component will update, and then you can then change
            and save a new title.
        </small>
        {{ component('changeable_edit_post', { post: post }) }}
    {% endif %}

    <h2>Date components</h2>
    {{ component('date') }}

    <h2>Markdown live component</h2>
    {{ component('markdown_input', { name: 'body', value: 'This is **working**.' }) }}

    <h2>Second Markdown live component with custom label</h2>
    {{ component('markdown_input', { name: 'body', value: 'This is **working**.', label: 'Custom Label' }) }}
{% endblock %}
